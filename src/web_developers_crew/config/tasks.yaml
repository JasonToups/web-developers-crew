product_requirements_task:
  description: >
    As a Product Manager for a {theme} landing page:
    
    1. Topic Generation
       - Generate a unique, specific topic within the {theme} category
       - The topic should be a clear, specific title (not a placeholder)
       - Consider current trends and market opportunities
    
    2. Landing Page Type Definition
       - Determine the most suitable type (Blog, eCommerce, Service, etc.)
       - Justify the choice based on topic and target audience
       - Outline specific requirements for the chosen type
    
    3. Content Creation
       - Write compelling headline and subheadlines
       - Create all section content and CTAs
       - Develop unique value propositions
       - Write testimonials or social proof content
    
    4. Business Strategy
       - Define clear conversion goals
       - Identify target audience segments
       - Outline key performance metrics
    
    Your output MUST be formatted with clear section markers:

    THEME:
    [Theme name]
    
    TOPIC:
    [Generated unique topic name]
    
    PAGE_TYPE:
    [Landing page type and justification]

    STRATEGY:
    [Business goals and metrics]
    
    CONTENT:
    [All page content organized by sections]
    
   
  expected_output: >
    THEME: [Theme name]
    TOPIC: [Generated unique topic name]
    PAGE_TYPE: [Landing page type and justification]
    STRATEGY: [Business goals and metrics]
    CONTENT: [All page content organized by sections]
  agent: product_manager

design_task:
  description: >
    As a UI/UX Designer for a {theme} website homepage, create a comprehensive design specification following our template system:

    STEP 1 - TEMPLATE REFERENCE
    First, review our example template in /templates/example:
    - Study the Bootstrap components used
    - Note the semantic HTML structure
    - Observe how global.css variables are applied
    - See how sections are organized and styled
    
    STEP 2 - STRUCTURE PLANNING
    Then, use /templates/structure.html to:
    - Determine which sections are required vs optional for {theme}
    - Select appropriate section variations for this website type
    - Plan content organization and hierarchy
    - Choose relevant components for each section

    STEP 3 - DESIGN SPECIFICATION
    Create a detailed specification including:
    1. THEME
       - Color scheme (using global.css variables)
       - Typography choices
       - Spacing adjustments
       - Component styling

    2. LAYOUT
       - Selected sections (in order)
       - Content structure
       - Grid arrangements
       - Responsive breakpoints

    3. COMPONENTS
       - Bootstrap components to use
       - Custom component variations
       - Interactive elements
       - Responsive behavior

    4. CONTENT
       - Section headlines
       - Supporting text
       - CTA messages
       - Image requirements

    IMPORTANT:
    - Reference example/index.html for implementation patterns
    - Follow structure.html for section organization
    - Use Bootstrap 5 components
    - Apply global.css variable system
    - Maintain responsive design principles
    - Consider accessibility requirements

  expected_output: >
    A complete technical design specification that:
    1. Lists all sections to include (referencing structure.html)
    2. Provides detailed component specifications
    3. Includes exact content requirements
    4. Specifies styling using global.css variables
    5. Details responsive behavior
    6. Notes any custom variations needed
  agent: ui_ux_designer

development_task:
  description: >
    As a Frontend Engineer for a {theme} website, implement a modern homepage template following these required sections:

    REQUIRED SECTIONS (in order):
    1. Header
       - Logo/branding
       - Primary navigation
       - Secondary navigation (if needed)
       - Call-to-action button
       - Mobile-responsive menu

    2. Hero Section
       - Main headline
       - Supporting text
       - Primary CTA
       - Background image/video
       - Optional: Floating elements

    3. Main Features/Benefits
       - Grid or card layout
       - Icons or images
       - Feature descriptions
       - Optional: Hover effects

    4. Content Showcase
       - Dynamic grid/masonry layout
       - Content previews
       - Category filters
       - Pagination/load more

    5. Social Proof
       - Testimonials
       - Reviews
       - Ratings
       - Client logos

    6. Call to Action
       - Strong headline
       - Supporting text
       - Form or button
       - Background imagery

    7. Footer
       - Multi-column layout
       - Site navigation
       - Contact information
       - Social links
       - Newsletter signup
       - Copyright
       - Legal links

    IMPORTANT:
    - Reference modern website builder templates
    - Use semantic HTML5 elements
    - Implement all sections in order
    - Use Bootstrap 5 components
    - Follow accessibility best practices
    - Include responsive images
    - Add hover/interaction states
    - Implement proper spacing
  expected_output: >
    ONLY INCLUDE The Three complete code sections:
    1. HTML section using Bootstrap V5 classes and components
    2. CSS section with custom styles
    3. JS section with interaction code
    Each containing ONLY its respective language's CODE.
  agent: frontend_engineer
